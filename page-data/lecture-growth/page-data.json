{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/lecture-growth/",
    "result": {"data":{"cur":{"id":"0b4633a0-520f-5d83-8591-f43e40841344","html":"<h3 id=\"주제\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%A0%9C\" aria-label=\"주제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌱 주제</h3>\n<p>피드백 주도 성장, 성장할 수 밖에 없는 환경 만들기</p>\n<h3 id=\"연사\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%82%AC\" aria-label=\"연사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📢 연사</h3>\n<p>우아한형제들 장현석, 임동준</p>\n<h3 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍯 정리</h3>\n<p>현실에서는 게임처럼 레벨이나 경험치가 나와있는 것도 아니기에 성장에 대한 수치를 한 눈에 알아보기 어렵다.\n그렇다면, 현실에서 게임과 같이 피드백 시스템 환경을 어떻게 구축해야될까?</p>\n<h4 id=\"part1-혼자-보단-동료와-함께\" style=\"position:relative;\"><a href=\"#part1-%ED%98%BC%EC%9E%90-%EB%B3%B4%EB%8B%A8-%EB%8F%99%EB%A3%8C%EC%99%80-%ED%95%A8%EA%BB%98\" aria-label=\"part1 혼자 보단 동료와 함께 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Part1. 혼자 보단 동료와 함께</h4>\n<p>보통 혼자 취업 준비를 하면 긴박함에 갇혀서 숲을 보지 못하고, 코 앞의 나무만 보일 수 밖에 없다. 이런 걸 터널비전이라고 하는데, 여기에 갇혀있기 보다 시야 밖에 있는 사람들과 <strong>소통할 수 있는 환경</strong>을 만드는 것이 좋다. 이렇게 소통을 통해서 피드백을 받는다면 부족한 점을 파악하기 쉽고, 그 만큼 성장욕구도 얻을 수 있다.</p>\n<blockquote>\n<p>훌륭한 의사소통은 블랙커피처럼 자극적이며, 후에 잠들기가 어렵다.</p>\n<p>- A.M. 린드버그(미국의 작가, 수필가)</p>\n</blockquote>\n<h4 id=\"part2-구체적인-경험치를-얻는-방법--피드백-loop-만들기\" style=\"position:relative;\"><a href=\"#part2-%EA%B5%AC%EC%B2%B4%EC%A0%81%EC%9D%B8-%EA%B2%BD%ED%97%98%EC%B9%98%EB%A5%BC-%EC%96%BB%EB%8A%94-%EB%B0%A9%EB%B2%95--%ED%94%BC%EB%93%9C%EB%B0%B1-loop-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"part2 구체적인 경험치를 얻는 방법  피드백 loop 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Part2. 구체적인 경험치를 얻는 방법 : 피드백 loop 만들기</h4>\n<p>스터디 같은 모임을 통해서 피드백을 얻는 방법도 좋지만, 우리가 일상에서 데일리로 피드백을 받기란 어려운 일이다. 어떻게 하면 개인 차원에서 피드백 loop를 만들 수 있을까?</p>\n<ul>\n<li>테스트코드</li>\n<li>코드리뷰(개인 or 동료와 함께)</li>\n<li>짝 프로그래밍</li>\n<li>커뮤니티 참여</li>\n<li>화면 녹화 등</li>\n</ul>\n<p>셀프로 받을 수 있는 피드백들을 정리했다. 코드리뷰에 있어서는 다른 사람에게 받는 피드백도 좋지만, 개인적으로 코드리뷰를 해보는 것도 좋은 습관이라고 한다. 예를 들면, 50분 코딩하고 10분 코드리뷰 하는 식으로. 또, 코딩 하면서 30분 정도 화면 녹화를 해서 빠르게 넘겨보면 내가 어느 지점에서 오래 삽질을 하고 있는지 잘 보인다고 한다. 부끄러울 정도로 잘 보여서 아프지만 더 성장할 수 있는 방법이 된다고 한다. <del>아프니까 청춘인건가,,🥲</del> 시간이 오래 걸리는 병목 지점이 있다면, 화면 녹화를 통해서 셀프 피드백을 줄 수 있다.</p>\n<h4 id=\"part3-그래서-오늘-해야하는-이것--회고\" style=\"position:relative;\"><a href=\"#part3-%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%98%A4%EB%8A%98-%ED%95%B4%EC%95%BC%ED%95%98%EB%8A%94-%EC%9D%B4%EA%B2%83--%ED%9A%8C%EA%B3%A0\" aria-label=\"part3 그래서 오늘 해야하는 이것  회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Part3. 그래서 오늘 해야하는 이것 : 회고</h4>\n<p>회고는 성장에 있어서 너무나 강력한 무기이다. 터널 비전에서 빠져나와 스스로 피드백을 해보고 부족한 점을 채울 수 있는 이제는 너무 유명한 방법이다.</p>\n<p>그래서 어떻게 회고하는 것이 좋은 회고일까?</p>\n<p><strong>5f</strong></p>\n<ul>\n<li>fact - 무슨 일이 있었는지, 뭘 했는지</li>\n<li>feeling - 무엇을 느꼈는지</li>\n<li>finding - 어떤 인사이트가 있었는지</li>\n<li>future action - 액션 플랜이 있는지(내일이나 미래)</li>\n<li>feedback - 진행한 액션 플랜에 대한 본인의 피드백</li>\n</ul>","excerpt":"🌱 주제 피드백 주도 성장, 성장할 수 밖에 없는 환경 만들기 📢 연사 우아한형제들 장현석, 임동준 🍯 정리 현실에서는 게임처럼 레벨이나 경험치가 나와있는 것도 아니기에 성장에 대한 수치를 한 눈에 알아보기 어렵다.\n그렇다면, 현실에서 게임과 같이 피드백 시스템 환경을 어떻게 구축해야될까? Part1. 혼자 보단 동료와 함께 보통 혼자 취업 준비를 하면 긴박함에 갇혀서 숲을 보지 못하고, 코 앞의 나무만 보일 수 밖에 없다. 이런 걸 터널비전이라고 하는데, 여기에 갇혀있기 보다 시야 밖에 있는 사람들과 소통할 수 있는 환경을 만드는 것이 좋다. 이렇게 소통을 통해서 피드백을 받는다면 부족한 점을 파악하기 쉽고, 그 만큼 성장욕구도 얻을 수 있다. 훌륭한 의사소통은 블랙커피처럼 자극적이며, 후에 잠들기가 어렵다. - A.M. 린드버그(미국의 작가, 수필가) Part2. 구체적인 경험치를 얻는 방법 : 피드백 loop 만들기 스터디 같은 모임을 통해서 피드백을 얻는 방법도 좋지만, 우…","frontmatter":{"date":"April 06, 2022","title":"[우테코X원티드] 오늘의 개발자 : 프론트엔드1","categories":"lecture","author":"leedawn","emoji":"👩‍💻"},"fields":{"slug":"/lecture-growth/"}},"next":{"id":"e92fa63b-4c08-546e-9367-bb9591e2a00d","html":"<p>자바스크립트로 api키 숨기기 시도 🏋️‍♀️ 그러나 실패,,,!<br>\n.env나 웹팩이 아닌 순수 자바스크립트로 api키를 숨기기 위해 apikey.js에 api 객체를 만들고, .gitignore에 apikey.js를 추가하여 숨기는 방법을 사용했는데… 찾아보니 ajax 방식으로 보내는 거라서 개발자 도구에서 정보가 줄줄 샌다고 한다.. 실제로 네트워크탭을 열어보니 api키가 훤히 보인다 😇 무료 api라서 크게 상관없지만, 실제 현업에서는 어떤 식으로 처리해야하는지 궁금하다..! 이건 다음에 글로 정리해보겠음 💪🏻</p>\n<p>그렇다면, ajax 방식이란 무엇일까?</p>\n<h3 id=\"ajax\" style=\"position:relative;\"><a href=\"#ajax\" aria-label=\"ajax permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ajax</h3>\n<p><strong>ajax</strong>란 <strong>Asynchronous JavaScript and XML</strong>의 약어로, <strong>서버와 비동기적으로 데이터를 주고받는 자바스크립트 기술</strong>을 의미한다. 웹 페이지 전체를 다시 로딩하지 않고도 서버에 GET 요청을 날릴 수 있는 js 코드라고 이해하면 된다.</p>\n<ul>\n<li>장점 : 새로고침이 없으니까 웹페이지 전환이 부드러워짐</li>\n<li>한계 : Ajax를 이용하면 여러 장점을 가지지만, Ajax로도 다음과 같은 일들은 처리할 수 없다.\n<ol>\n<li>Ajax는 클라이언트가 서버에 데이터를 요청하는 클라이언트 풀링 방식을 사용하므로, 서버 푸시 방식의 실시간 서비스는 만들 수 없다.</li>\n<li>Ajax로는 바이너리 데이터를 보내거나 받을 수 없음.</li>\n<li>Ajax 스크립트가 포함된 서버가 아닌 다른 서버로 Ajax 요청을 보낼 수는 없다.</li>\n<li>클라이언트의 PC로 Ajax 요청을 보낼 수는 없다.</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"자바스크립트로-ajax-요청을-날리는-방법\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C-ajax-%EC%9A%94%EC%B2%AD%EC%9D%84-%EB%82%A0%EB%A6%AC%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"자바스크립트로 ajax 요청을 날리는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트로 ajax 요청을 날리는 방법</h3>\n<ul>\n<li>fetch</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://leedawnn.github.io/price.json'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'400 아니면 500 에러남'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">결과</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>결과<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'에러남'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>async/await</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">데이터가져오는함수</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://leedawnn.github.io/price.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'400 아니면 500 에러남'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">데이터가져오는함수</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'에러남'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>axios</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">axios\n  <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://leedawnn.github.io/price.json'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 서버에서 받아온 데이터</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'에러남'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"date":"April 05, 2022","title":"AJAX란 ?!","categories":"web","author":"leedawn","emoji":"🧐"},"fields":{"slug":"/about-ajax/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://leedawnn.github.io","comments":{"utterances":{"repo":"leedawnn/leedawnn.github.io"}}}}},"pageContext":{"slug":"/lecture-growth/","nextSlug":"/about-ajax/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}