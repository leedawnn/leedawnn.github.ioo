{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts",
    "result": {"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"34bef439-be79-54a0-8aaa-72dc91291aaa","excerpt":"객체지향 프로그래밍? 함수형 프로그래밍? 모던 자바스크립트 deep dive 스터디를 하면서, 자바스크립트 세계는 모든 것이 객체로 이루어져있다는 것을 보고 객체지향 프로그래밍을 배워야하는 것인가, 하지만 요새는 함수형 프로그래밍이 대세라던데..? 라는 주제로 팀원들과 얘기를 나눈 적이 있다. 잘은 모르겠지만 함수형 프로그래밍을 배워야한다로 결론이 났던 것 같은데, 이 글에서 이유를 자세히 알아보자 🤓 왜 함수형 프로그래밍을 배워야하나?   재미 / 실시간성 라이브 방송, 실시간 댓글, 협업, 메신저 독창성 / 완성도 애니메이션, 무한 스크롤, 벽돌 더 많아져야하는 동시성 비동기 I/O, CSP, Actor, SMT … 대용량 / 정확성 / 병렬성 MapReduce, Clojure Reducers… 복잡도 / MSA / … 많아지고 세밀해지는 도구들 예전에는 하나의 프레임워크가 전체의 구현을 대신하고, 해당 서비스의 구체화되는 부분만 알려주면 그 프레임워크가 모든 것을 동작 시켰다…","fields":{"slug":"/functional-programming/"},"frontmatter":{"categories":"JS","title":"웹개발에서 함수형 프로그래밍이 대세다?","date":"April 15, 2022"}},"next":{"fields":{"slug":"/lecture-growth/"}},"previous":null},{"node":{"id":"0b4633a0-520f-5d83-8591-f43e40841344","excerpt":"🌱 주제 피드백 주도 성장, 성장할 수 밖에 없는 환경 만들기 📢 연사 우아한형제들 장현석, 임동준 🍯 정리 현실에서는 게임처럼 레벨이나 경험치가 나와있는 것도 아니기에 성장에 대한 수치를 한 눈에 알아보기 어렵다.\n그렇다면, 현실에서 게임과 같이 피드백 시스템 환경을 어떻게 구축해야될까? Part1. 혼자 보단 동료와 함께 보통 혼자 취업 준비를 하면 긴박함에 갇혀서 숲을 보지 못하고, 코 앞의 나무만 보일 수 밖에 없다. 이런 걸 터널비전이라고 하는데, 여기에 갇혀있기 보다 시야 밖에 있는 사람들과 소통할 수 있는 환경을 만드는 것이 좋다. 이렇게 소통을 통해서 피드백을 받는다면 부족한 점을 파악하기 쉽고, 그 만큼 성장욕구도 얻을 수 있다. 훌륭한 의사소통은 블랙커피처럼 자극적이며, 후에 잠들기가 어렵다. - A.M. 린드버그(미국의 작가, 수필가) Part2. 구체적인 경험치를 얻는 방법 : 피드백 loop 만들기 스터디 같은 모임을 통해서 피드백을 얻는 방법도 좋지만, 우…","fields":{"slug":"/lecture-growth/"},"frontmatter":{"categories":"lecture","title":"[우테코X원티드] 오늘의 개발자 : 프론트엔드1","date":"April 06, 2022"}},"next":{"fields":{"slug":"/about-ajax/"}},"previous":{"fields":{"slug":"/functional-programming/"}}},{"node":{"id":"e92fa63b-4c08-546e-9367-bb9591e2a00d","excerpt":"자바스크립트로 api키 숨기기 시도 🏋️‍♀️ 그러나 실패,,,! .env나 웹팩이 아닌 순수 자바스크립트로 api키를 숨기기 위해 apikey.js에 api 객체를 만들고, .gitignore에 apikey.js를 추가하여 숨기는 방법을 사용했는데… 찾아보니 ajax 방식으로 보내는 거라서 개발자 도구에서 정보가 줄줄 샌다고 한다.. 실제로 네트워크탭을 열어보니 api키가 훤히 보인다 😇 무료 api라서 크게 상관없지만, 실제 현업에서는 어떤 식으로 처리해야하는지 궁금하다..! 이건 다음에 글로 정리해보겠음 💪🏻 그렇다면, ajax 방식이란 무엇일까? ajax ajax란 Asynchronous JavaScript and XML의 약어로, 서버와 비동기적으로 데이터를 주고받는 자바스크립트 기술을 의미한다. 웹 페이지 전체를 다시 로딩하지 않고도 서버에 GET 요청을 날릴 수 있는 js 코드라고 이해하면 된다. 장점 : 새로고침이 없으니까 웹페이지 전환이 부드러워짐 한계 : Ajax를 이용하…","fields":{"slug":"/about-ajax/"},"frontmatter":{"categories":"web","title":"AJAX란 ?!","date":"April 05, 2022"}},"next":{"fields":{"slug":"/what-is-BEM/"}},"previous":{"fields":{"slug":"/lecture-growth/"}}},{"node":{"id":"b05632b8-84cf-5574-b399-2858b0e1bcc1","excerpt":"오늘은 BEM 방법론에 대해 얘기해보려해요 😃 BEM 공식문서를 보면, BEM(Block, Element, Modifier)이란 웹 개발에 대한 컴포넌트 기반 접근법이라고 나와있어요.\n말이 어렵지만 유지보수를 위한 css 클래스네임에 대한 고민? 이라고 생각하면 될 것 같아요. 1. Introduction 소규모 사이트에서 스타일에 대해 코드를 짤 때 어떻게 구성할 지에 대해서 신경쓰지 않는 것은 보통 큰 문제가 되지 않아요.\n하지만, 규모가 크고 복잡한 프로젝트의 경우 다음과 같은 3가지 이유로 아주 중요해집니다. 코드 작성 시간에 영향을 끼친다. 써야하는 코드의 양에 영향을 끼친다. 브라우저가 로딩해야하는 양에 영향을 끼친다. 또한 팀과 협업해야 할 때, 그리고 좋은 퍼포먼스가 필수적일 때 특히 중요해요. 레거시 코드와 함께 긴 기간 진행되는 프로젝트들에도 역시 중요합니다. 2. Methodologies CSS 설치 공간을 줄이고, 개발자 간의 협력을 구성하며 대규모 CSS 코…","fields":{"slug":"/what-is-BEM/"},"frontmatter":{"categories":"css","title":"BEM 방법론","date":"March 24, 2022"}},"next":{"fields":{"slug":"/about-innerText-textContent/"}},"previous":{"fields":{"slug":"/about-ajax/"}}},{"node":{"id":"e94c82d1-4c13-5f60-a35e-a9f0249a49d5","excerpt":"개인적으로 element에 텍스트를 추가하고 싶을 때는 innerText를 사용하는 편이에요. 두 프로퍼티는 어떤 공통점과 차이점을 가지고 있는지 궁금해져서 정리해보려고 합니다 ! 공통점 🍯 둘 다 텍스트노드를 추가해요. 텍스트를 추가한다는 공통점이 있어요. 결과 역시 동일해요. 해당 element의 텍스트 값을 반환해요. 즉, 어떤 텍스트를 가지고 있는지 알 수 있어요. 차이점 👻 는 와  요소를 포함한 모든 요소의 콘텐츠를 가져옵니다. 반면 는 “사람이 읽을 수 있는” 요소만 처리해요. 즉, 는 모든 텍스트를 그대로 가져오지만, 는 불필요한 공백을 제거하고 텍스트로 반환하는 차이점이 있어요. textConent가 먼저 만들어졌고, 더 빨리 사용되었다고 해요. 이런 이유로 브라우저 호환성도 좀 더 높습니다. 또한 큰 차이는 아니지만 더 가볍다고 알려져 있어요. 예를 들어, 아래와 같은 태그가 있다고 가정해볼게요. 이 때, innerText와 textContent의 결과는 다릅니다…","fields":{"slug":"/about-innerText-textContent/"},"frontmatter":{"categories":"JS","title":"innerText vs textContent","date":"March 16, 2022"}},"next":{"fields":{"slug":"/whta-is-CRS-SSR/"}},"previous":{"fields":{"slug":"/what-is-BEM/"}}},{"node":{"id":"d36652d6-8d98-50a3-8eb4-39169d2807ca","excerpt":"들어가기에 앞서.. 파이널 프로젝트를 하면서, 싱크업 미팅 때 홈페이지 인덱스 쪽을 SSR로 개발해달라는 기업 측 요구사항이 있어서 공부할 겸 정리를 해보려고 합니다 😃 CSR란 무엇인가?  CSR란 Client Side Rendering의 약자로, 클라이언트가 렌더링을 하는 방식을 말합니다. 우리가 웹사이트에 접속하게 되면, 빈 HTML 파일을 먼저 다운받게 됩니다. 그래서 이 HTML 파일 안에 있는 DOM 요소나 스타일들이 보이게 되죠.\n이 다음 단계부터는 리액트를 예시로 들겠습니다. 리액트는 자바스크립트로 이루어진 커다란 웹 애플리케이션입니다. 그렇기 때문에 자바스크립트 전체가 다운이 완료되어야지 리액트가 실행됩니다. 이후 한마디로 전체 자바스크립트 파일이 다운되어서 실행되기 전까지 우리는 리액트 앱 화면을 볼 수 없다는 말이죠. 🥲 리액트가 실행되면 리액트 컴포넌트들이 화면에 그려지게 되고 그제서야 화면을 볼 수 있게 되고, 유저가 인터랙션을 할 수 있게 됩니다. 이후 필…","fields":{"slug":"/whta-is-CRS-SSR/"},"frontmatter":{"categories":"web","title":"CSR, SSR이 뭐예요?","date":"January 09, 2022"}},"next":{"fields":{"slug":"/make-gatsby-starter-zoomkoding/"}},"previous":{"fields":{"slug":"/about-innerText-textContent/"}}},{"node":{"id":"9edb0306-4a3f-5fc1-a59d-da4955498907","excerpt":"💅 예쁘면 장땡 처음 개발 블로그를 만들 때는 velog를 이용했다. 마크다운을 지원해서 글쓰는 것도 편하고, 무엇보다 사이트가 깔끔하고 예뻤다. 태그를 달아 카테고리 별로 보기 쉽게 정리할 수도 있었다. 그치만.. 잔디밭을 심지 못한다는 단점이 있어서 Jeykll이나 Hexo를 이용하여 github blog를 만들기도 했다. 하지만 테마가 마음에 들지 않아 글을 쓰고 싶은 마음이 들지 않았다. 핑계인가..ㅎ 그렇게 github 파도타기를 하며 예쁜 테마를 찾던 중, zoomkoding-gatsby-blog 템플릿이 눈에 들어왔다.\n예.뻤.다. ✨ ✅ Gatsby의 장점 Jekyll은 Ruby 기반으로 만들어져 있고, Gatsby는 React 기반으로 만들어졌다.\n현재 React를 공부하고 있고, 앞으로도 React를 현업에서 많이 쓸 예정이기 때문에 Gatsby를 사용하는 것이 블로그 세팅이 더 쉬울 것이라는 판단을 했다. 또한 개발자들이 서로 다른 콘텐츠, API 및 서비스를 …","fields":{"slug":"/make-gatsby-starter-zoomkoding/"},"frontmatter":{"categories":"featured","title":"Gatsby로 github blog 만들기","date":"January 06, 2022"}},"next":null,"previous":{"fields":{"slug":"/whta-is-CRS-SSR/"}}}],"categories":["All","JS","lecture","web","css","featured"]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}