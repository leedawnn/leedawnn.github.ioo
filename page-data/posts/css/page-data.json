{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/css",
    "result": {"pageContext":{"currentCategory":"css","categories":["All","react","web","environment","회고","JS","lecture","css","featured"],"edges":[{"node":{"id":"b05632b8-84cf-5574-b399-2858b0e1bcc1","excerpt":"오늘은 BEM 방법론에 대해 얘기해보려해요 😃 BEM 공식문서를 보면, BEM(Block, Element, Modifier)이란 웹 개발에 대한 컴포넌트 기반 접근법이라고 나와있어요.\n말이 어렵지만 유지보수를 위한 css 클래스네임에 대한 고민? 이라고 생각하면 될 것 같아요. 1. Introduction 소규모 사이트에서 스타일에 대해 코드를 짤 때 어떻게 구성할 지에 대해서 신경쓰지 않는 것은 보통 큰 문제가 되지 않아요.\n하지만, 규모가 크고 복잡한 프로젝트의 경우 다음과 같은 3가지 이유로 아주 중요해집니다. 코드 작성 시간에 영향을 끼친다. 써야하는 코드의 양에 영향을 끼친다. 브라우저가 로딩해야하는 양에 영향을 끼친다. 또한 팀과 협업해야 할 때, 그리고 좋은 퍼포먼스가 필수적일 때 특히 중요해요. 레거시 코드와 함께 긴 기간 진행되는 프로젝트들에도 역시 중요합니다. 2. Methodologies CSS 설치 공간을 줄이고, 개발자 간의 협력을 구성하며 대규모 CSS 코…","fields":{"slug":"/what-is-BEM/"},"frontmatter":{"categories":"css","title":"BEM 방법론","date":"March 24, 2022"}},"next":{"fields":{"slug":"/about-innerText-textContent/"}},"previous":{"fields":{"slug":"/about-ajax/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}