{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/ts",
    "result": {"pageContext":{"currentCategory":"ts","categories":["All","회고","frontend","react","js","javascript","RegExp","ts","JS","fronted","tool","lecture","web","environment","style"],"edges":[{"node":{"id":"e2b1e6ee-f1e6-5f95-b493-aa325413d35e","excerpt":"JavaScript와 TypeScript TypeScript는 JavaScript 기반의 언어 JavaScript는 클라이언트 측 스크립팅 언어 TypeScript는 객체 지향 컴파일 언어 객체 지향 프로그래밍 패러다임은 데이터 추상화에 중심 객체와 클래스라는 두 주요 개념을 기반으로 함 JavaScript 웹 개발에 주로 사용됨 웹 페이지를 대화식으로 만드는 프로그래밍 언어 폼 유효성 검사, 애니메이션 적용 및 이벤트 생성을 수행 클라이언트 측 스크립팅 언어 사용자가 웹 브라우저를 열고 웹 페이지를 요청하면 해당 요청이 웹 서버로 이동함 멀티 스레딩, 멀티 프로세싱 기능이 없음 TypeScript JavaScript의 상위 집합으로 JavaScript의 모든 기능이 있음 TypeScript 컴파일러를 사용하여 ts(TypeScript)파일을 js(JavaScript) 파일로 변환, 쉽게 통합 정적 유형 검사 제공 클래스 기반 객체를 만들 수 있음 클래스 기반이므로 객체 지향 프로…","fields":{"slug":"/codecamp_blog_5/"},"frontmatter":{"categories":"js ts","title":"javascript vs typescript","date":"August 26, 2022"}},"next":{"fields":{"slug":"/codecamp_blog_4/"}},"previous":{"fields":{"slug":"/codecamp_blog_6/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}