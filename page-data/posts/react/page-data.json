{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/react",
    "result": {"pageContext":{"currentCategory":"react","categories":["All","JS","react","frontend","interview","회고","tool","lecture","web","environment","style"],"edges":[{"node":{"id":"9cf4014f-78e1-55c3-be1a-8d2fdeb00421","excerpt":"React 컴포넌트에는 라이프 사이클 또는 생명 주기가 있다. 컴포넌트가 실행되거나 업데이트되거나 제거될 때, 특정한 이벤트들이 발생한다. 컴포넌트는 생성(mounting) -> 업데이트(updating) -> 제거(unmounting) 의 생명주기를 갖는다. 리액트 클래스 컴포넌트는 라이프 사이클 메서드를 사용하고, 함수형 컴포넌트는 Hook을 사용한다. 클래스 컴포넌트의 라이프 사이클 react17부터는 componentWillMount, componentWillUpdate, componentWillReceiveProps 라이프 사이클이 deprecated 되었다.  Mount 컴포넌트가 처음 실행될 때를 Mount라고 표현한다. 컴포넌트가 시작되면 우선 context, defaultProps와 state를 저장한다. 아래 메서드들은 컴포넌트의 인스턴스가 생성되어 DOM 상에 삽입될 때에 순서대로 호출된다. constructor() 메서드를 바인딩하거나 state를 초기화하는 …","fields":{"slug":"/react-lifecycle/"},"frontmatter":{"categories":"react","title":"React의 라이프 사이클","date":"March 13, 2023"}},"next":{"fields":{"slug":"/so-why-is-js-asynchronous/"}},"previous":{"fields":{"slug":"/hoisting/"}}},{"node":{"id":"0d4985e4-75d9-520c-9d73-c77719c5439b","excerpt":"React의 특징은 무엇일까 면접에서 빼놓을 수 없는 React 관련 질문들 중 React의 특징에 대해서 알아보자 😉 1. 컴포넌트 기반 설계 의미 단위로 컴포넌트 구성 재사용성과 유지보수성 증가 부모, 자식 관계를 가짐 2. Virtual DOM 일반적으로 우리가 자바스크립트를 이용하여 DOM을 변경할 때, 브라우저가 DOM을 재구축하고 화면을 그리는 과정을 거치게 된다. 하지만 잦은 DOM 변경은 웹 사이트의 성능 문제를 야기한다. 그래서 React는 virtual DOM(가상돔)을 하나 만들어두고, 변경되어야할 DOM 요소를 미리 virtual DOM에서 모두 변경해두고 이것을 DOM(찐)에서 동기화시키는 방식을 사용한다. 이런식으로 하게 되면 DOM을 직접 변경시킬 때 발생하는 비효율을 어느정도 해결할 수 있게 된다. 3. 높은 자유도 컴포넌트는 고립되어 있고, 독립적이며 재사용이 가능하다. 그렇기 때문에 unit test가 가능해진다. Unit text란, 유닛 테스트의…","fields":{"slug":"/react-characteristic/"},"frontmatter":{"categories":"react","title":"React의 특징","date":"May 15, 2022"}},"next":{"fields":{"slug":"/image-optimization/"}},"previous":{"fields":{"slug":"/what-about-graphql/"}}},{"node":{"id":"05c02b84-3ca2-596b-9ab0-e179853bef35","excerpt":"CRA를 쓰는 이유 페이스북에서 개발한 Create-React-App(CRA) 보일러 플레이트를 사용하면 간편하게 리액트로 웹 애플리케이션을 만들 수 있다. CRA는 개발 환경을 구성할 때 필요한 여러가지 라이브러리나 웹팩의 설정 없이 쉽게 프로젝트를 시작할 수 있다. CRA에 대한 장점을 정리해보자. One Dependency\none build dependency를 가진다. Webpack, babel, ESLint 등을 사용하지만 응집력 있는 큐레이션된 경험을 제공한다. No Configuration Required\n개발 환경을 위해 많은 것을 설정하지 않아도 된다. CRA는 프로젝트에 필요한 필수적인 설정(Configuration)을 대신 해준다. CRA는 Autoprefixer를 지원해준다. 즉, 일반적인 CSS코드 생성을 하게 되면 자동으로 -webkit-, -ms- 등을 자동으로 적용해준다. CRA를 이용하면 기존 기능을 개선하거나 새로운 기능을 추가했을 때 패키지 버전만…","fields":{"slug":"/you-shouldnt-do-eject/"},"frontmatter":{"categories":"react","title":"Create-React-App에서 eject를 하면 안되는 이유","date":"April 29, 2022"}},"next":{"fields":{"slug":"/functional-programming/"}},"previous":{"fields":{"slug":"/js-deep-dive-study/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}