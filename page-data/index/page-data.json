{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"98188b37-4f37-56b2-b12a-e30e86391164","excerpt":"프론트엔드 면접을 준비하기 위해 Interview_Question_for_Beginner 레포를 보며 정리하려고 한다,, 😬 Part 1. 전산 기초 💡 Part 1-1 Development common sense 좋은 코드란 무엇인가? 이 질문은 자신만의 코드 철학?을 물어보는 것 같다. 개인마다 ‘좋은 코드’의 기준이 다르고, 각각의 경험을 기반으로 좋은 코드를 정의하고 있다. 읽기 쉬운 코드 일관성 있는 코드 확장 가능한 코드 객체 지향 프로그래밍이란 무엇인가? 객체 지향 프로그래밍(Object-Oriented Programming, OOP)은 프로그래밍에서 필요한 데이터를 추상화시켜 상태와 행위를 가진 객체로 만들고, 객체들간의 상호작용을 통해 로직을 구성하는 프로그래밍 방법이다. 객체 지향 프로그래밍의 특징 추상화 객체에서 공통된 속성과 행위를 추출하는 것 추상화는 불필요한 정보는 숨기고 중요한 정보만을 표현함으로써 프로그램을 간단하게 만드는 것 아우디, 니싼, 볼보는 모…","frontmatter":{"categories":"interview","title":"프론트엔드 면접 대비 Part1. CS","date":"January 23, 2023"},"fields":{"slug":"/prepare-interview-01/"}}},{"node":{"id":"75a793d4-1681-548f-be83-f1e6c1787481","excerpt":"프리온보딩 프론트엔드 챌린지을 지원하면서 Todo 앱을 JSDoc으로 문서화하는 사전 미션이 주어졌다. 요구 사항을 구현하지 않고 설계만 하라고,,? JSDoc은 몰까? 공식문서를 따라서 JSDoc 찍먹 해보쟈! JSDoc 공식 매뉴얼 문서 - @Use JSDoc JSDoc란? JSDoc는 자바스크립트 API 문서화 도구(Documentation Generator)이다. 문서화 도구란, 소스 파일에 작성된 주석을 파싱하여 클래스, 메스드 등 API 정보를 HTML 문서 웹사이트로 생성해주는 도구를 지칭한다. 개발 중인 코드에 주석이 잘 작성되어 있다면, 문서화 도구가 제공하는 명령어 한 줄만으로 불필요한 핸드메이드 작업을 피할 수 있다. 목적 JSDoc의 목적은 자바스크립트 애플리케이션 또는 라이브러리의 API를 문서화하기 위함이다. 또한 자바스크립트 소스코드에 타입 힌트를 제공하여 에러의 가능성을 낮추고, 타입 체크를 할 수 있다. 환경 세팅 1. JSDoc 설치 2. 루트 디렉…","frontmatter":{"categories":"JS","title":"JSDoc 찍먹 🍯","date":"January 22, 2023"},"fields":{"slug":"/about-jsDoc/"}}},{"node":{"id":"efb6e4b1-0176-5316-bef8-c2bf70350db4","excerpt":"팀프로젝트 첫 주, 으쌰으쌰 🏇 팀원들이 정해지고, 간단한 OT이후 기획과 팀 전반적인 룰을 진행하기 위해 회의를 진행했다. 아이스브레이킹 겸 자기소개는 전 주에 미리하고, 기획에 대해 아이템 하나씩 생각해오기로 했음. 생각해온 기획 아이디어에 대해 한 명씩 설명하고, 투표를 진행했다. 2번의 투표 결과, 내가 생각해온 아이템인 댕더가 채택되었다 😉  나름 쟁쟁했음. 팀원별로 역할을 분담했는데, 난 발표자료 제작을 맡았다. 개발은 개발대로 진행되고, 마지막 주에 ppt 작업하는데 정말 죽을뻔.. 밤새서 완성했다..🤪 기획 이후 와이어프레임, 플로우 차트, 간단한 목업 작업을 했다. 하지만… 와이어프레임, 플로우 차트를 만들면서 나타나는 기획적 빵꾸… 😇 이 때는 반려동물 굿즈 관련 스토어까지 얘기가 나왔었는데, 프로젝트가 너무 무거워져 일정에 차질이 생길 것 같아서 덜어내기로 했다. 대신 후원하기 페이지를 넣기로 했음!(But,, 2주차 중간점검 때 까임)댕댕이를 위한 어플인만큼 …","frontmatter":{"categories":"회고","title":"코드캠프 수료 회고","date":"October 04, 2022"},"fields":{"slug":"/codecamp_grad/"}}},{"node":{"id":"143e6bcd-a91d-5e59-850a-a96ccc684b6e","excerpt":"데이터를 받아와 화면에 뿌려줄 때 자주 쓰이는 배열 메서드! 쓸 때마다 매번 헷갈려서 구글링을 한다..🥲 게다가 배열 메서드마다 성능이 다 다르기 때문에, 용도에 따라서 어떤 것이 더 편하기도 하다. 확실하게 개념도 파악할 겸 블로그에 정리해놓고 필요할 때마다 보려고한다! for 가장 빠르고 단순하다. 모든 자료형에서 사용할 수 있다. continue / break 사용 가능 forEach forEach는 각 배열 요소에 대해 한 번씩 callback 함수를 실행한다. map과 reduce와는 달리 undefined를 반환하기 때문에 메서드 체인의 중간에 사용할 수 없다. 위에서 본 for문은 실무에서 잘 쓰이지 않는다.(계산이 많이 필요한 서비스라면 얘기가 달라진다) 가독성이 별로 좋지 않기 때문이다. forEach는 for문보다 가독성이 좋고, 복잡한 객체를 처리하는데 있어서 유리하다. 하지만, forEach문은 구문 밖으로 return 값을 받지 못한다는 단점이 있다. for…","frontmatter":{"categories":"JS","title":"자바스크립트 배열 메서드 마스터하기","date":"July 14, 2022"},"fields":{"slug":"/master-array-method/"}}},{"node":{"id":"fcd6528d-5459-5551-a445-d5c448784466","excerpt":"Atomic Pattern이란?  atomic pattern이란, 소스코드를 아주 작은 컴포넌트 단위로 먼저 쪼개는 방법을 의미한다. 이렇게 하는 이유는 컴포넌트의 중복을 최소화 하기 위함이다. 총 5개의 폴더 구조로 이루어지며, 화학점 관점에서 영감을 얻은 디자인 패턴이다. 개발에만 적용되는 개념이 아니며, 디자인의 세계에서도 널리 알려진 패턴이다. 따라서, atomic pattern을 사용하면 디자이너와의 협업에서 유리해질 수 있고, 프로젝트 시작부터 체계적인 UI적 설계가 가능해진다. 현재 웹 프론트 개발에 가장 많이 쓰이는 프레임워크인 React, Vue, Flutter 모두 컴포넌트 단위로 개발을 진행하기 때문에 이러한 컴포넌트 중심 설계 패턴이 더욱 주목 받게 되었다. 하지만, 프로젝트 시작부터 UI를 디자이너와 함께 설계해야하므로 실제 개발 준비까지 걸리는 시간이 오래 걸릴 수 있다. 따라서 시간, 비용, 팀의 상황 등에 따라 적용하는 것이 일반적이다. 그렇다면 각 컴…","frontmatter":{"categories":"fronted","title":"Atomic Pattern이란?","date":"July 11, 2022"},"fields":{"slug":"/about-atomic-pattern/"}}},{"node":{"id":"d4862210-2f10-540a-ac00-28b0df9284b7","excerpt":"Git과 Github 차이점 본론에 들어가기 앞서, 은근 헷갈리기 쉬운 주제를 정리해보자.\n간단해보일지라도 면접에서 물어본다면 머리가 하얘질 수 있다,,, Git : 오픈 소스 버전 관리 시스템 Github : 클라우드 서버를 이용해서 로컬에서 버전 관리한 소스코드를 업로드함. 소스 코드 공유가 가능한 원격 저장소 Git 명령어 명령어 기능 설명 git init 저장소 초기화 git status 현재 상태 확인 git add 현재 상태 추적 git commit 현재 상태 저장 git push 원격 저장소에 공유 git clone 원격 저장소 복제 git pull 원격 저장소에서 로컬로 업데이트 git log 이력 확인 git reset 이전 상태로(이력 제거) git revert 이전 상태로(이력 유지) git switch 브랜치 변경 git merge 브랜치 합치기 git restore 워킹 트리의 파일을 복원 Git의 기초  워킹 디렉토리의 모든 파일은 크게 Tracked(관리…","frontmatter":{"categories":"tool","title":"Git 마스터 하기","date":"July 06, 2022"},"fields":{"slug":"/about-git/"}}},{"node":{"id":"03463685-50ef-59b4-ae09-dadfb62bcb70","excerpt":"갑작스런 코로나 확진으로 인한 잔디밭 가뭄사건.. 🥲 잔디밭과 함께 비워진 머리를 다시 성장 욕구로 채우기 위해 강의를 들었다.\n마침 원티드에서 신입 개발자를 위해 관련된 콘텐츠 패키지를 무료로 볼 수 있게 풀어줘서 바아로 신청했다. 나이스 타이밍 👍🏻 📢 연사 Puzzle AI 강병진, 위코드 김예리 🌱 Part1. 누구보다 빠르게 성장하기 주 40시간으로는 세상을 바꿀 수 없다. 일단 만든다! 사이드 프로젝트 🌱 Part2. 개발자의 커뮤니케이션과 네트워킹 개발자들은 기본적으로 협업을 하기 때문에, 커뮤니케이션과 네트워킹이 중요하다고들 한다. 이유가 뭘까? 나한테 당연한 게 남한테도 당연한 것은 아니다. ‘내가 이 정도 말하면 이해했겠지?‘라고 생각해도 상대방은 좀 더 자세한 설명을 원할 수 있다.\n소통을 할 때, 내가 하고 싶은 대로 하는 것이 아니라 상대방에게 초점을 맞춰 이해할 수 있도록 하는 것이 중요하다. 개발자 모임에 적극적으로 참여하거나 명함을 주거나 내가 개발자라는…","frontmatter":{"categories":"lecture","title":"빠르게 성장하고 싶은 주니어 개발자를 위한 로드맵","date":"May 25, 2022"},"fields":{"slug":"/lecture-junior-loadmap/"}}},{"node":{"id":"ae9f3dff-6b00-5d54-a988-6256258508c1","excerpt":"본론으로 들어가기 전 최근 FE 재남님이 라이브로 코딩하시는 걸 봤었는데, REST API보다 GraphQL이 편리한 이유에 대해서 설명하시는 걸 듣고 graphQL을 공부하고 싶어졌다. 공부하기 전에는 쿼리 언어라고 하길래 데이터베이스 관련이구나 하고 지나갔었는데,, 묘하게 반전.. 😬 이제 REST API보다 GraphQL을 쓰고 싶어진 이유에 대해 알아보자. graphQL이란? GraphQL은 Facebook이 만든 API에 대한 쿼리 언어이다. GraphQL은 API에 대한 쿼리 언어이며 기존 데이터로 이러한 쿼리를 수행하기 위한 런타임입니다. GraphQL은 API의 데이터에 대한 완전하고 이해하기 쉬운 설명을 제공하며, 고객에게 필요한 것이 무엇이며 그 이상의 것이 없는지 정확히 물어볼 수 있는 힘을 제공하며, 시간이 지남에 따라 API를 더 쉽게 개발할 수 있도록 하며, 강력한 개발자 도구를 지원합니다. graphQL은 어떠한 문제를 해결할 수 있나? 일단 GraphQ…","frontmatter":{"categories":"frontend","title":"REST API보다 graphQL을 쓰고 싶은 이유","date":"May 16, 2022"},"fields":{"slug":"/what-about-graphql/"}}},{"node":{"id":"0d4985e4-75d9-520c-9d73-c77719c5439b","excerpt":"React의 특징은 무엇일까 면접에서 빼놓을 수 없는 React 관련 질문들 중 React의 특징에 대해서 알아보자 😉 1. 컴포넌트 기반 설계 의미 단위로 컴포넌트 구성 재사용성과 유지보수성 증가 부모, 자식 관계를 가짐 2. Virtual DOM 일반적으로 우리가 자바스크립트를 이용하여 DOM을 변경할 때, 브라우저가 DOM을 재구축하고 화면을 그리는 과정을 거치게 된다. 하지만 잦은 DOM 변경은 웹 사이트의 성능 문제를 야기한다. 그래서 React는 virtual DOM(가상돔)을 하나 만들어두고, 변경되어야할 DOM 요소를 미리 virtual DOM에서 모두 변경해두고 이것을 DOM(찐)에서 동기화시키는 방식을 사용한다. 이런식으로 하게 되면 DOM을 직접 변경시킬 때 발생하는 비효율을 어느정도 해결할 수 있게 된다. 3. 높은 자유도 컴포넌트는 고립되어 있고, 독립적이며 재사용이 가능하다. 그렇기 때문에 unit test가 가능해진다. Unit text란, 유닛 테스트의…","frontmatter":{"categories":"frontend","title":"React의 특징","date":"May 15, 2022"},"fields":{"slug":"/react-characteristic/"}}},{"node":{"id":"be23dd6c-5b7a-57a1-9e26-ce2a96a52404","excerpt":"이미지의 중요성 최근 들어, 초고속망 인터넷과, 그에 따른 사용자의 니즈로 인하여 웹페이지는 무게는 점점 더 무거워지고 있다. 위 사진을 보면, 2017년엔 1420.8kb이던 웹사이트의 무게가 2022년 현재는 2203.8kb로 무려 55%나 무거워졌기 때문이다. 특히 E-Commerce는 사이트 특성상 사진이 많이 들어가고, 상품을 팔기 위해선 사진은 빠질 수 없는 가장 중요한 요소이며, 이미지의 사이즈는 판매와도 직결되는 부분이다. 왜냐하면 KissMetrics의 연구 결과에 따르면 페이지 로딩이 약 1초씩 느려질 때마다 상품을 구매하는 사용자의 비율은 약 7%씩 감소할 수 있다고 한다. 그러므로 이미지 최적화는 프론트엔드 개발자의 숙명이라고 할 수 있다. 웹사이트 이미지 체크 HTTP 아카이브 연구에 따르면 평균 웹사이트의 반 이상이 이미지로 이루어져 있으며, 이미지의 용량도 다른 콘텐츠에 비해 월등히 높다고 한다. 따라서 이미지의 사이즈를 적절히 줄이고, 렌더링 속도를 빠…","frontmatter":{"categories":"web","title":"이미지 최적화","date":"May 11, 2022"},"fields":{"slug":"/image-optimization/"}}},{"node":{"id":"042e5c57-78ee-5607-8329-698fb7014144","excerpt":"introduction 는 코딩 컨벤션에 위배되는 코드나 안티 패턴을 자동 검출하는 도구다. 처음부터 유용하게 사용할 수 있는 스타일 가이드(built-in rule)을 제공하지만 개발자가 자신의 스타일 가이드를 작성할 수도 있다. 는 코드의 최대 길이, 함수에서, 작은따옴표(‘)를 사용할 것인지 아니면 큰 따옴표(“)를 사용할 것인지 등 코드가 예쁘게 보이도록 하는지에 중점을 두었다. 하지만 코드의 에러를 잡아내진 못한다. install eslint & Airbnb style guide 를 기본으로 와 필요 플러그인들을 로컬 설치하자. 를 전역으로 설치할 수도 있으나 권장하지 않는다. 만약 전역으로 설치할 경우에는 공유 설정과 필요 플러그인을 로컬 설치해 주어야 한다. 참고로 이 글에서의 스타일 가이드는 에 대한 설명도 들어있지만, 와 를 사용한다는 가정하에 작성되었다. 플러그인 설명 eslint-config-airbnb Airbnb의 style guide를 eslint의 설정 …","frontmatter":{"categories":"environment","title":"eslint, stylelint 설정하기(with VSCODE)","date":"May 10, 2022"},"fields":{"slug":"/eslint-setting/"}}},{"node":{"id":"394b3165-1fda-58ab-870b-a1db5979e079","excerpt":"스터디에 참여한 이유 자바스크립트에 대한 기초가 부족한 채로 SPA 프레임워크를 사용하여 프로젝트를 해오니 간단한 오류 하나 잡는 것에도 시간이 많이 들었다. 최신 기술 스택들을 따라가기 보다는 기초가 튼튼한 개발자가 되어야겠다고 마음을 먹고, okky를 통해서 스터디를 찾아 참여하게 되었다. 스터디 진행 스터디는 게더타운에서 평일 밤 10시에 모여 진도에 맞는 챕터를 각자 1시간동안 읽고, 토론을 하는 식으로 진행했다. 보통 30분 정도 토론을 했고, 길어지면 12시를 넘기는 날도 있었다. 진도를 다 끝내는 데 2달 정도 걸렸다. 학생, 취준생, 현업자로 다양한 사람들로 구성되었다. 마지막엔 나 포함 2명밖에 남지 않았지만.. 스터디 내내 개발 초보가 보는 관점과 현업에 계신 분의 관점이 이렇게 다르구나를 느낄 수 있었다. 역시 아는 만큼 보인다..! 모던 자바스크립트 Deep Dive 스터디 레포지토리를 통해 진도 체크를 하였고, 자유롭게 글을 올리는 식으로 진행되었다. 난 T…","frontmatter":{"categories":"회고","title":"모던 자바스크립트 Deep Dive 스터디 회고","date":"May 01, 2022"},"fields":{"slug":"/js-deep-dive-study/"}}},{"node":{"id":"05c02b84-3ca2-596b-9ab0-e179853bef35","excerpt":"CRA를 쓰는 이유 페이스북에서 개발한 Create-React-App(CRA) 보일러 플레이트를 사용하면 간편하게 리액트로 웹 애플리케이션을 만들 수 있다. CRA는 개발 환경을 구성할 때 필요한 여러가지 라이브러리나 웹팩의 설정 없이 쉽게 프로젝트를 시작할 수 있다. CRA에 대한 장점을 정리해보자. One Dependency\none build dependency를 가진다. Webpack, babel, ESLint 등을 사용하지만 응집력 있는 큐레이션된 경험을 제공한다. No Configuration Required\n개발 환경을 위해 많은 것을 설정하지 않아도 된다. CRA는 프로젝트에 필요한 필수적인 설정(Configuration)을 대신 해준다. CRA는 Autoprefixer를 지원해준다. 즉, 일반적인 CSS코드 생성을 하게 되면 자동으로 -webkit-, -ms- 등을 자동으로 적용해준다. CRA를 이용하면 기존 기능을 개선하거나 새로운 기능을 추가했을 때 패키지 버전만…","frontmatter":{"categories":"frontend","title":"Create-React-App에서 eject를 하면 안되는 이유","date":"April 29, 2022"},"fields":{"slug":"/you-shouldnt-do-eject/"}}},{"node":{"id":"34bef439-be79-54a0-8aaa-72dc91291aaa","excerpt":"객체지향 프로그래밍? 함수형 프로그래밍? 모던 자바스크립트 deep dive 스터디를 하면서, 자바스크립트 세계는 모든 것이 객체로 이루어져있다는 것을 보고 객체지향 프로그래밍을 배워야하는 것인가, 하지만 요새는 함수형 프로그래밍이 대세라던데..? 라는 주제로 팀원들과 얘기를 나눈 적이 있다. 잘은 모르겠지만 함수형 프로그래밍을 배워야한다로 결론이 났던 것 같은데, 이 글에서 이유를 자세히 알아보자 🤓 왜 함수형 프로그래밍을 배워야하나?   재미 / 실시간성 라이브 방송, 실시간 댓글, 협업, 메신저 독창성 / 완성도 애니메이션, 무한 스크롤, 벽돌 더 많아져야하는 동시성 비동기 I/O, CSP, Actor, SMT … 대용량 / 정확성 / 병렬성 MapReduce, Clojure Reducers… 복잡도 / MSA / … 많아지고 세밀해지는 도구들 예전에는 하나의 프레임워크가 전체의 구현을 대신하고, 해당 서비스의 구체화되는 부분만 알려주면 그 프레임워크가 모든 것을 동작 시켰다…","frontmatter":{"categories":"JS","title":"웹개발에서 함수형 프로그래밍이 대세다?","date":"April 15, 2022"},"fields":{"slug":"/functional-programming/"}}},{"node":{"id":"0b4633a0-520f-5d83-8591-f43e40841344","excerpt":"🌱 주제 피드백 주도 성장, 성장할 수 밖에 없는 환경 만들기 📢 연사 우아한형제들 장현석, 임동준 🍯 정리 현실에서는 게임처럼 레벨이나 경험치가 나와있는 것도 아니기에 성장에 대한 수치를 한 눈에 알아보기 어렵다.\n그렇다면, 현실에서 게임과 같이 피드백 시스템 환경을 어떻게 구축해야될까? Part1. 혼자 보단 동료와 함께 보통 혼자 취업 준비를 하면 긴박함에 갇혀서 숲을 보지 못하고, 코 앞의 나무만 보일 수 밖에 없다. 이런 걸 터널비전이라고 하는데, 여기에 갇혀있기 보다 시야 밖에 있는 사람들과 소통할 수 있는 환경을 만드는 것이 좋다. 이렇게 소통을 통해서 피드백을 받는다면 부족한 점을 파악하기 쉽고, 그 만큼 성장욕구도 얻을 수 있다. 훌륭한 의사소통은 블랙커피처럼 자극적이며, 후에 잠들기가 어렵다. - A.M. 린드버그(미국의 작가, 수필가) Part2. 구체적인 경험치를 얻는 방법 : 피드백 loop 만들기 스터디 같은 모임을 통해서 피드백을 얻는 방법도 좋지만, 우…","frontmatter":{"categories":"lecture","title":"[우테코X원티드] 오늘의 개발자 : 프론트엔드1","date":"April 06, 2022"},"fields":{"slug":"/lecture-growth/"}}},{"node":{"id":"e92fa63b-4c08-546e-9367-bb9591e2a00d","excerpt":"자바스크립트로 api키 숨기기 시도 🏋️‍♀️ 그러나 실패,,,! .env나 웹팩이 아닌 순수 자바스크립트로 api키를 숨기기 위해 apikey.js에 api 객체를 만들고, .gitignore에 apikey.js를 추가하여 숨기는 방법을 사용했는데… 찾아보니 ajax 방식으로 보내는 거라서 개발자 도구에서 정보가 줄줄 샌다고 한다.. 실제로 네트워크탭을 열어보니 api키가 훤히 보인다 😇 무료 api라서 크게 상관없지만, 실제 현업에서는 어떤 식으로 처리해야하는지 궁금하다..! 이건 다음에 글로 정리해보겠음 💪🏻 그렇다면, ajax 방식이란 무엇일까? ajax ajax란 Asynchronous JavaScript and XML의 약어로, 서버와 비동기적으로 데이터를 주고받는 자바스크립트 기술을 의미한다. 웹 페이지 전체를 다시 로딩하지 않고도 서버에 GET 요청을 날릴 수 있는 js 코드라고 이해하면 된다. 장점 : 새로고침이 없으니까 웹페이지 전환이 부드러워짐 한계 : Ajax를 이용하…","frontmatter":{"categories":"web","title":"AJAX란 ?!","date":"April 05, 2022"},"fields":{"slug":"/about-ajax/"}}},{"node":{"id":"b05632b8-84cf-5574-b399-2858b0e1bcc1","excerpt":"오늘은 BEM 방법론에 대해 얘기해보려해요 😃 BEM 공식문서를 보면, BEM(Block, Element, Modifier)이란 웹 개발에 대한 컴포넌트 기반 접근법이라고 나와있어요.\n말이 어렵지만 유지보수를 위한 css 클래스네임에 대한 고민? 이라고 생각하면 될 것 같아요. 1. Introduction 소규모 사이트에서 스타일에 대해 코드를 짤 때 어떻게 구성할 지에 대해서 신경쓰지 않는 것은 보통 큰 문제가 되지 않아요.\n하지만, 규모가 크고 복잡한 프로젝트의 경우 다음과 같은 3가지 이유로 아주 중요해집니다. 코드 작성 시간에 영향을 끼친다. 써야하는 코드의 양에 영향을 끼친다. 브라우저가 로딩해야하는 양에 영향을 끼친다. 또한 팀과 협업해야 할 때, 그리고 좋은 퍼포먼스가 필수적일 때 특히 중요해요. 레거시 코드와 함께 긴 기간 진행되는 프로젝트들에도 역시 중요합니다. 2. Methodologies CSS 설치 공간을 줄이고, 개발자 간의 협력을 구성하며 대규모 CSS 코…","frontmatter":{"categories":"style","title":"BEM 방법론","date":"March 24, 2022"},"fields":{"slug":"/what-is-BEM/"}}},{"node":{"id":"e94c82d1-4c13-5f60-a35e-a9f0249a49d5","excerpt":"개인적으로 element에 텍스트를 추가하고 싶을 때는 innerText를 사용하는 편이에요. 두 프로퍼티는 어떤 공통점과 차이점을 가지고 있는지 궁금해져서 정리해보려고 합니다 ! 공통점 🍯 둘 다 텍스트노드를 추가해요. 텍스트를 추가한다는 공통점이 있어요. 결과 역시 동일해요. 해당 element의 텍스트 값을 반환해요. 즉, 어떤 텍스트를 가지고 있는지 알 수 있어요. 차이점 👻 는 와  요소를 포함한 모든 요소의 콘텐츠를 가져옵니다. 반면 는 “사람이 읽을 수 있는” 요소만 처리해요. 즉, 는 모든 텍스트를 그대로 가져오지만, 는 불필요한 공백을 제거하고 텍스트로 반환하는 차이점이 있어요. textConent가 먼저 만들어졌고, 더 빨리 사용되었다고 해요. 이런 이유로 브라우저 호환성도 좀 더 높습니다. 또한 큰 차이는 아니지만 더 가볍다고 알려져 있어요. 예를 들어, 아래와 같은 태그가 있다고 가정해볼게요. 이 때, innerText와 textContent의 결과는 다릅니다…","frontmatter":{"categories":"JS","title":"innerText vs textContent","date":"March 16, 2022"},"fields":{"slug":"/about-innerText-textContent/"}}},{"node":{"id":"d36652d6-8d98-50a3-8eb4-39169d2807ca","excerpt":"들어가기에 앞서.. 파이널 프로젝트를 하면서, 싱크업 미팅 때 홈페이지 인덱스 쪽을 SSR로 개발해달라는 기업 측 요구사항이 있어서 공부할 겸 정리를 해보려고 합니다 😃 CSR란 무엇인가?  CSR란 Client Side Rendering의 약자로, 클라이언트가 렌더링을 하는 방식을 말합니다. 우리가 웹사이트에 접속하게 되면, 빈 HTML 파일을 먼저 다운받게 됩니다. 그래서 이 HTML 파일 안에 있는 DOM 요소나 스타일들이 보이게 되죠.\n이 다음 단계부터는 리액트를 예시로 들겠습니다. 리액트는 자바스크립트로 이루어진 커다란 웹 애플리케이션입니다. 그렇기 때문에 자바스크립트 전체가 다운이 완료되어야지 리액트가 실행됩니다. 이후 한마디로 전체 자바스크립트 파일이 다운되어서 실행되기 전까지 우리는 리액트 앱 화면을 볼 수 없다는 말이죠. 🥲 리액트가 실행되면 리액트 컴포넌트들이 화면에 그려지게 되고 그제서야 화면을 볼 수 있게 되고, 유저가 인터랙션을 할 수 있게 됩니다. 이후 필…","frontmatter":{"categories":"web","title":"CSR, SSR이 뭐예요?","date":"January 09, 2022"},"fields":{"slug":"/whta-is-CRS-SSR/"}}},{"node":{"id":"9edb0306-4a3f-5fc1-a59d-da4955498907","excerpt":"💅 예쁘면 장땡 처음 개발 블로그를 만들 때는 velog를 이용했다. 마크다운을 지원해서 글쓰는 것도 편하고, 무엇보다 사이트가 깔끔하고 예뻤다. 태그를 달아 카테고리 별로 보기 쉽게 정리할 수도 있었다. 그치만.. 잔디밭을 심지 못한다는 단점이 있어서 Jeykll이나 Hexo를 이용하여 github blog를 만들기도 했다. 하지만 테마가 마음에 들지 않아 글을 쓰고 싶은 마음이 들지 않았다. 핑계인가..ㅎ 그렇게 github 파도타기를 하며 예쁜 테마를 찾던 중, zoomkoding-gatsby-blog 템플릿이 눈에 들어왔다.\n예.뻤.다. ✨ ✅ Gatsby의 장점 Jekyll은 Ruby 기반으로 만들어져 있고, Gatsby는 React 기반으로 만들어졌다.\n현재 React를 공부하고 있고, 앞으로도 React를 현업에서 많이 쓸 예정이기 때문에 Gatsby를 사용하는 것이 블로그 세팅이 더 쉬울 것이라는 판단을 했다. 또한 개발자들이 서로 다른 콘텐츠, API 및 서비스를 …","frontmatter":{"categories":"frontend","title":"Gatsby로 github blog 만들기","date":"January 06, 2022"},"fields":{"slug":"/make-gatsby-starter-zoomkoding/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"이지혜","bio":{"role":"개발자","description":["매일 더 성장하는","끝까지 해내는","이로운 것을 나누고픈"],"thumbnail":"memoji.png"},"social":{"github":"https://github.com/leedawnn","linkedIn":"https://www.linkedin.com/in/ji-hey-lee-0175b9224/","email":"dev.leedawn@gmail.com"}}}}},"pageContext":{}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437","3350743975"]}